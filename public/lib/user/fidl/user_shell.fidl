// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module modular;

import "lib/component/fidl/component_context.fidl";
import "lib/context/fidl/context_writer.fidl";
import "lib/context/fidl/context_reader.fidl";
import "lib/suggestion/fidl/proposal_publisher.fidl";
import "lib/suggestion/fidl/suggestion_provider.fidl";
import "lib/user_intelligence/fidl/intelligence_services.fidl";
import "lib/agent/fidl/agent_provider.fidl";
import "lib/auth/fidl/account/account.fidl";
import "lib/story/fidl/link.fidl";
import "lib/story/fidl/story_provider.fidl";
import "lib/ui/presentation/fidl/presentation.fidl";
import "lib/user/fidl/focus.fidl";

// This interface is implemented by a user shell. Dependencies are passed to it
// in Initialize() on startup. The user shell is also expected to implement
// Lifecycle in order to receive a Terminate() call on teardown.
//
// In one component instance there can only be one UserShell service instance.
// The ViewOwner request is sent to the separate ViewProvider service. This way,
// the user shell may be implemented as a flutter app.
//
// Teardown may be initiated by the user shell calling
// UserShellContext.Logout(), by the user runner being terminated, or by the
// system shutting down.
[ServiceName="modular.UserShell"]  // Created by user shell applications.
interface UserShell {
  Initialize@0(UserShellContext user_shell_context);
};

// This interface allows the |UserShell| to request capabilities from the
// |UserRunner| in a way that is more explicit about the services that are
// offered than a generic |ServiceProvider|.
//
// TODO(jwnichols): This includes both |maxwell.IntelligenceServices| and
// access to the services that it provides. Consider removing the direct
// access to the contained services.
interface UserShellContext {
  // The account associated with the currently logged-in user. It's NULL if
  // logged into GUEST mode.
  GetAccount@0() => (auth.Account? account);
  GetAgentProvider@1(AgentProvider& request);
  GetComponentContext@2(ComponentContext& request);
  GetContextReader@3(maxwell.ContextReader& request);
  GetContextWriter@4(maxwell.ContextWriter& request);
  GetDeviceName@5() => (string device_name);
  GetFocusController@6(FocusController& request);
  GetFocusProvider@7(FocusProvider& request);
  GetIntelligenceServices@8(maxwell.IntelligenceServices& request);
  GetLink@9(Link& request);
  GetPresentation@10(mozart.Presentation& presentation);
  GetProposalPublisher@11(maxwell.ProposalPublisher& request);
  GetStoryProvider@12(StoryProvider& request);
  GetSuggestionProvider@13(maxwell.SuggestionProvider& request);
  GetVisibleStoriesController@14(VisibleStoriesController& request);

  // Requests logout of the user. This causes the device runner to tear down the
  // |UserRunner| instance of the user.
  Logout@15();
};
