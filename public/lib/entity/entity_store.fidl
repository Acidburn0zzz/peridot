// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file contains the definition for EntityFactory.
//
// STATUS: Draft / Heavy WIP: expect significant changes.

module modular;

import "entity.fidl";

[ServiceName="modular.EntityStore"]
interface EntityStore {
  // Creates an Entity with the listed content types and content. Each entry in
  // |types| must have an index-equivalent entry in |contents|, although that
  // entry can be null. Returns an Entity. If an EntityReference is needed,
  // call |entity.GetReference()|.
  //
  // TODO(thatguy): |contents| should be a VMO or a File, once FIDL2 is
  // launched, and a simpler way of creating VMOs in Dart is available.
  CreateEntity(array<string> types, array<array<uint8>?> contents, Entity& entity);

  // TODO(thatguy): Do we want to have a way to permanently delete an Entity here?
};

