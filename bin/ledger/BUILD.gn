# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

visibility = [ "//peridot/*" ]

package("ledger") {
  system_image = true

  deps = [
    "app",
  ]

  binaries = [ {
        name = "ledger"
      } ]
}

package("ledger_tool") {
  system_image = true

  deps = [
    "tool",
  ]

  binaries = [ {
        name = "ledger_tool"
      } ]
}

package("ledger_tests") {
  testonly = true
  system_image = true

  deps = [
    ":ledger_unittests",
    "test/benchmark",
    "test/e2e_local",
    "test/e2e_sync",
    "test/integration",
    "//peridot/bin/cloud_provider_firebase:tests",
    "//peridot/bin/cloud_provider_firestore:tests",
    "//peridot/public/lib/cloud_provider/validation",
  ]

  binaries = [
    {
      name = "launch_benchmark"
    },

    {
      name = "ledger_benchmark_delete_entry"
    },

    {
      name = "ledger_benchmark_convergence"
    },

    {
      name = "ledger_benchmark_fetch"
    },

    {
      name = "ledger_benchmark_put"
    },

    {
      name = "ledger_benchmark_sync"
    },

    {
      name = "ledger_benchmark_update_entry"
    },
  ]
  tests = [
    {
      name = "cloud_provider_firebase_unittests"
    },
    {
      name = "cloud_provider_firestore_unittests"
    },
    {
      name = "cloud_provider_validation_tests"

      # This test needs additional configuration and should not run by default.
      # Marking it as disabled puts the binary in /system/test/disabled/.
      disabled = true
    },
    {
      name = "launch_validation_tests_firebase"

      # This test needs additional configuration and should not run by default.
      # Marking it as disabled puts the binary in /system/test/disabled/.
      disabled = true
    },
    {
      name = "ledger_integration_tests"
    },

    {
      name = "ledger_unittests"
    },

    {
      name = "ledger_e2e_local"
    },

    {
      name = "ledger_e2e_sync"

      # This test needs additional configuration and should not run by default.
      # Marking it as disabled puts the binary in /system/test/disabled/.
      disabled = true
    },
    {
      name = "run_ledger_benchmarks.sh"
      disabled = true
    },
  ]

  resources = [
    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/convergence/convergence.tspec")
      dest = "ledger/benchmark/convergence.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/put/transaction.tspec")
      dest = "ledger/benchmark/transaction.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/put/entry_count.tspec")
      dest = "ledger/benchmark/entry_count.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/put/entry_count_update.tspec")
      dest = "ledger/benchmark/entry_count_update.tspec"
    },

    {
      path =
          rebase_path("//peridot/bin/ledger/test/benchmark/put/key_size.tspec")
      dest = "ledger/benchmark/key_size.tspec"
    },

    {
      path = rebase_path("//peridot/bin/ledger/test/benchmark/put/put.tspec")
      dest = "ledger/benchmark/put.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/put/transaction_size.tspec")
      dest = "ledger/benchmark/transaction_size.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/put/value_size.tspec")
      dest = "ledger/benchmark/value_size.tspec"
    },

    {
      path = rebase_path("//peridot/bin/ledger/test/benchmark/sync/sync.tspec")
      dest = "ledger/benchmark/sync.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/update_entry/update_entry.tspec")
      dest = "ledger/benchmark/update_entry.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/update_entry/update_entry_transactions.tspec")
      dest = "ledger/benchmark/update_entry_transactions.tspec"
    },

    {
      path =
          rebase_path("//peridot/bin/ledger/test/benchmark/fetch/fetch.tspec")
      dest = "ledger/benchmark/fetch.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/fetch/fetch_partial.tspec")
      dest = "ledger/benchmark/fetch_partial.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/delete_entry/delete_entry.tspec")
      dest = "ledger/benchmark/delete_entry.tspec"
    },

    {
      path = rebase_path(
              "//peridot/bin/ledger/test/benchmark/delete_entry/delete_entry_transaction.tspec")
      dest = "ledger/benchmark/delete_entry_transaction.tspec"
    },
  ]
}

config("ledger_config") {
  safe_stack_flags = [
    # The coroutine code needs to be correct both with and without safe stack. Keeping this here
    # to easily check until safe stack is enabled globally on fuchsia.
    "-fsanitize=safe-stack",
    "-fstack-protector-strong",
  ]

  asmflags = safe_stack_flags

  cflags = safe_stack_flags + [
             # Remove when enabled globally by TO-99.
             "-Wunused-lambda-capture",

             # Remove when enabled globally by TO-100.
             "-Wuser-defined-warnings",
           ]

  ldflags = safe_stack_flags + [
              # Use a 1M stack.
              "-Wl,-z,stack-size=0x100000",
            ]
}

executable("ledger_unittests") {
  testonly = true

  deps = [
    "//garnet/public/lib/fxl:fxl_printers",
    "//garnet/public/lib/test_runner/cpp:gtest_main",
    "//peridot/bin/ledger/app:unittests",
    "//peridot/bin/ledger/cloud_sync/impl:unittests",
    "//peridot/bin/ledger/coroutine:unittests",
    "//peridot/bin/ledger/coroutine/context:unittests",
    "//peridot/bin/ledger/encryption/impl:unittests",
    "//peridot/bin/ledger/encryption/primitives:unittests",
    "//peridot/bin/ledger/environment:unittests",
    "//peridot/bin/ledger/storage/impl:unittests",
    "//peridot/bin/ledger/storage/impl/btree:unittests",
    "//peridot/bin/ledger/storage/public:unittests",
    "//peridot/bin/ledger/test:unittests",
  ]

  configs += [ ":ledger_config" ]
}
