# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

visibility = [ "//peridot/*" ]

group("ledger") {
  public_deps = [
    "//peridot/bin/ledger/app",
    "//peridot/bin/ledger/auth_provider",
    "//peridot/bin/ledger/backoff",
    "//peridot/bin/ledger/callback",
    "//peridot/bin/ledger/cloud_sync",
    "//peridot/bin/ledger/convert",
    "//peridot/bin/ledger/encryption",
    "//peridot/bin/ledger/environment",
    "//peridot/bin/ledger/firebase",
    "//peridot/bin/ledger/gcs",
    "//peridot/bin/ledger/glue/crypto",
    "//peridot/bin/ledger/network",
    "//peridot/bin/ledger/storage",
    "//peridot/bin/ledger/tool",
  ]
}

group("tests") {
  testonly = true

  public_deps = [
    ":ledger_unittests",
    "//peridot/bin/ledger/test/benchmark",
    "//peridot/bin/ledger/test/e2e_local",
    "//peridot/bin/ledger/test/e2e_sync",
    "//peridot/bin/ledger/test/integration",
  ]
}

config("ledger_config") {
  safe_stack_flags = [
    # The coroutine code needs to be correct both with and without safe stack. Keeping this here
    # to easily check until safe stack is enabled globally on fuchsia.
    "-fsanitize=safe-stack",
    "-fstack-protector-strong",
  ]

  asmflags = safe_stack_flags

  cflags = safe_stack_flags + [
             # Remove when enabled globally by TO-99.
             "-Wunused-lambda-capture",

             # Remove when enabled globally by TO-100.
             "-Wuser-defined-warnings",
           ]

  ldflags = safe_stack_flags + [
              # Use a 1M stack.
              "-Wl,-z,stack-size=0x100000",
            ]
}

executable("ledger_unittests") {
  testonly = true

  deps = [
    "//garnet/public/lib/fxl:fxl_printers",
    "//garnet/public/lib/test_runner/cpp:gtest_main",
    "//peridot/bin/ledger/app:unittests",
    "//peridot/bin/ledger/auth_provider:unittests",
    "//peridot/bin/ledger/backoff:unittests",
    "//peridot/bin/ledger/callback:unittests",
    "//peridot/bin/ledger/cloud_sync/impl:unittests",
    "//peridot/bin/ledger/convert:unittests",
    "//peridot/bin/ledger/coroutine:unittests",
    "//peridot/bin/ledger/coroutine/context:unittests",
    "//peridot/bin/ledger/device_set:unittests",
    "//peridot/bin/ledger/encryption/impl:unittests",
    "//peridot/bin/ledger/environment:unittests",
    "//peridot/bin/ledger/firebase:unittests",
    "//peridot/bin/ledger/gcs:unittests",
    "//peridot/bin/ledger/glue:unittests",
    "//peridot/bin/ledger/network:unittests",
    "//peridot/bin/ledger/storage/impl:unittests",
    "//peridot/bin/ledger/storage/impl/btree:unittests",
    "//peridot/bin/ledger/storage/public:unittests",
    "//peridot/bin/ledger/test:unittests",
    "//peridot/bin/ledger/test/token_provider:unittests",
    "//peridot/bin/ledger/third_party/bup:unittests",
  ]

  configs += [ ":ledger_config" ]
}
