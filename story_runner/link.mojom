// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file contains the definition of Link as well as the structure
// of the data it holds.

module modular;

// No service name: created by Session.
interface Link {
  SetValue(LinkValue value);
  Value() => (LinkValue? value);
  Watch(LinkChanged watcher);
  Dup(Link& dup);
};

// No service name: created by Module.
interface LinkChanged {
  Value(LinkValue value);
};

// JSON-LD inspired structure for the value of a link. This allows to
// represent JSON and thus also JSON-LD if we really want it to. (Read
// the spec https://www.w3.org/TR/json-ld/ to help decide.) Once we go
// for JSON-LD, special properties like @id, @value, @type, @context
// and so on may be represented as actual struct fields to enforce
// their presence.
union LinkValue {
  string string_value;
  int64 int_value;
  double double_value;
  bool bool_value;
  map<string, LinkValue> object_value;
  array<LinkValue> array_value;
};

