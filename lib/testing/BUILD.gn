# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("testing") {
  sources = [
    "reporting.cc",
    "reporting.h",
    "testing.cc",
    "testing.h",
  ]

  deps = [
    "//application/lib/app",
    "//apps/test_runner/services:test_runner",
  ]
}

source_set("component_base") {
  testonly = true

  sources = [
    "component_base.h",
  ]

  public_deps = [
    ":testing",
    "//application/lib/app",
    "//apps/modular/lib/fidl:single_service_app",
    "//apps/modular/lib/fidl:single_service_view_app",
    "//lib/ftl",
    "//lib/mtl",
  ]
}

source_set("story_provider_mock") {
  testonly = true

  sources = [
    "story_provider_mock.h",
  ]

  public_deps = [
    "//apps/modular/services/user",
  ]

  deps = [
    "//lib/fidl/cpp/bindings",
  ]
}

source_set("test_with_message_loop") {
  testonly = true

  sources = [
    "test_with_message_loop.cc",
    "test_with_message_loop.h",
  ]

  public_deps = [
    "//lib/ftl",
    "//lib/mtl",
    "//third_party/gtest",
  ]
}

source_set("unittests") {
  testonly = true

  sources = [
    "test_with_message_loop_unittest.cc",
  ]

  deps = [
    ":test_with_message_loop",
  ]
}

source_set("fake_application_launcher") {
  testonly = true

  sources = [
    "fake_application_launcher.cc",
    "fake_application_launcher.h",
  ]

  deps = [
    "//application/lib/app",
    "//application/services",
    "//lib/ftl",
    "//lib/mtl",
  ]
}

source_set("ledger_repository_for_testing") {
  testonly = true

  sources = [
    "ledger_repository_for_testing.cc",
    "ledger_repository_for_testing.h",
  ]

  deps = [
    "//application/lib/app",
    "//application/services",
    "//apps/ledger/services/internal",
    "//apps/ledger/services/public",
    "//apps/modular/lib/fidl:app_client",
    "//apps/modular/lib/ledger:constants",
    "//apps/modular/services/config",
    "//apps/test_runner/lib:application_context",
    "//lib/ftl",
    "//lib/mtl",
  ]
}
